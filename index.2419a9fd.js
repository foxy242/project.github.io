!function(){function e(e){return e&&e.__esModule?e.default:e}var n="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},r={},t={},a=n.parcelRequire901d;null==a&&((a=function(e){if(e in r)return r[e].exports;if(e in t){var n=t[e];delete t[e];var a={id:e,exports:{}};return r[e]=a,n.call(a.exports,a,a.exports),a.exports}var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}).register=function(e,n){t[e]=n},n.parcelRequire901d=a),a.register("kMC0W",(function(e,n){"use strict";Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.default=function(e){if(Array.isArray(e))return t.default(e)};var r,t=(r=a("8NIkP"))&&r.__esModule?r:{default:r}})),a.register("8NIkP",(function(e,n){"use strict";Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.default=function(e,n){(null==n||n>e.length)&&(n=e.length);for(var r=0,t=new Array(n);r<n;r++)t[r]=e[r];return t}})),a.register("7AJDX",(function(e,n){"use strict";Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.default=function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}})),a.register("8CtQK",(function(e,n){"use strict";Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.default=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}})),a.register("auk6i",(function(e,n){"use strict";Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.default=function(e,n){if(!e)return;if("string"==typeof e)return t.default(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(r);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return t.default(e,n)};var r,t=(r=a("8NIkP"))&&r.__esModule?r:{default:r}}));var o={};Object.defineProperty(o,"__esModule",{value:!0}),o.default=function(e){return i.default(e)||u.default(e)||d.default(e)||c.default()};var i=s(a("kMC0W")),u=s(a("7AJDX")),c=s(a("8CtQK")),d=s(a("auk6i"));function s(e){return e&&e.__esModule?e:{default:e}}var f=[{name:"Albert",surname:"Einstein",born:1879,dead:1955,id:1},{name:"Isaac",surname:"Newton",born:1643,dead:1727,id:2},{name:"Galileo",surname:"Galilei",born:1564,dead:1642,id:3},{name:"Marie",surname:"Curie",born:1867,dead:1934,id:4},{name:"Johannes",surname:"Kepler",born:1571,dead:1630,id:5},{name:"Nicolaus",surname:"Copernicus",born:1473,dead:1543,id:6},{name:"Max",surname:"Planck",born:1858,dead:1947,id:7},{name:"Katherine",surname:"Blodgett",born:1898,dead:1979,id:8},{name:"Ada",surname:"Lovelace",born:1815,dead:1852,id:9},{name:"Sarah E.",surname:"Goode",born:1855,dead:1905,id:10},{name:"Lise",surname:"Meitner",born:1878,dead:1968,id:11},{name:"Hanna",surname:"Hammarström",born:1829,dead:1909,id:12}],l=document.querySelector(".info__scientists");f.forEach((function(e){return l.innerHTML+='\n    <li class="info__scientist" data-id="'.concat(e.id,'">\n        <p class="info__name">').concat(e.name," ").concat(e.surname,'</p>\n        <p class="info__lifeYears">').concat(e.born,"-").concat(e.dead," years</p>\n    </li>\n")}));var m=document.querySelector(".info__prompts");["отримати масив вчених що народилися в 19 ст","Відсортувати вчених по алфавіту","Відсортувати вчених по кількості прожитих років","Знайти вченого який народився найпізніше.","Знайти рік народження Albert Einstein","знайти вчених прізвище яких починається на літеру С","Видалити з масива всіх вчених імя яких починається на A","Знайти вченого який прожив найбільше і вченого який прожив найменьше","Знайти вчених в яких співпадають перші літери імені і прізвища"].forEach((function(e,n){return m.innerHTML+='\n    <li class="info__prompt">\n        <button class="info__but" data-promptNum="'.concat(n,'">').concat(e,"</button>\n    </li>\n")}));var p=function(e){l.innerHTML="",Array.isArray(e)?e.forEach((function(e){return l.innerHTML+='\n            <li class="info__scientist" data-id="'.concat(e,'">\n                <p class="info__name">').concat(f.find((function(n){return n.id===e})).name," ").concat(f.find((function(n){return n.id===e})).surname,'</p>\n                <p class="info__lifeYears">').concat(f.find((function(n){return n.id===e})).born,"-").concat(f.find((function(n){return n.id===e})).dead," years</p>\n            </li>\n        ")})):l.innerHTML+='\n            <li class="info__scientist" data-id="'.concat(e,'">\n                <p class="info__name">').concat(e.name," ").concat(e.surname,'</p>\n                <p class="info__lifeYears">').concat(e.born,"-").concat(e.dead," years</p>\n            </li>\n        ")};m.addEventListener("click",(function(n){switch(n.target.getAttribute("data-promptNum")){case"0":p(f.filter((function(e){return e.born>1800&&e.born<=1900})).map((function(e){return e.id})));break;case"1":p(f.sort((function(e,n){return e.name.localeCompare(n.name)})).map((function(e){return e.id})));break;case"2":p(f.sort((function(e,n){return n.dead-n.born-(e.dead-e.born)})).map((function(e){return e.id})));break;case"3":p(f.sort((function(e,n){return n.born-e.born}))[0]);break;case"4":p(f.find((function(e){return"Albert"===e.name&&"Einstein"===e.surname})));break;case"5":p(f.filter((function(e){return e.surname.startsWith("C")})).map((function(e){return e.id})));break;case"6":p(f.filter((function(e){return!e.name.startsWith("A")})).map((function(e){return e.id})));break;case"7":var r,t;p([(r=Math).max.apply(r,e(o)(f.map((function(e){return e.dead-e.born})))),(t=Math).min.apply(t,e(o)(f.map((function(e){return e.dead-e.born}))))].map((function(e){return f.find((function(n){return n.dead-n.born===e})).id})));break;case"8":p(f.filter((function(e){return e.name[0]===e.surname[0]})).map((function(e){return e.id})))}}))}();
//# sourceMappingURL=index.2419a9fd.js.map
