{"mappings":"AAAA,MAAMA,EAAa,CACf,CACIC,KAAM,SACNC,QAAS,WACTC,KAAM,KACNC,KAAM,KACNC,GAAI,GAER,CACIJ,KAAM,QACNC,QAAS,SACTC,KAAM,KACNC,KAAM,KACNC,GAAI,GAER,CACIJ,KAAM,UACNC,QAAS,UACTC,KAAM,KACNC,KAAM,KACNC,GAAI,GAER,CACIJ,KAAM,QACNC,QAAS,QACTC,KAAM,KACNC,KAAM,KACNC,GAAI,GAER,CACIJ,KAAM,WACNC,QAAS,SACTC,KAAM,KACNC,KAAM,KACNC,GAAI,GAER,CACIJ,KAAM,WACNC,QAAS,aACTC,KAAM,KACNC,KAAM,KACNC,GAAI,GAER,CACIJ,KAAM,MACNC,QAAS,SACTC,KAAM,KACNC,KAAM,KACNC,GAAI,GAER,CACIJ,KAAM,YACNC,QAAS,WACTC,KAAM,KACNC,KAAM,KACNC,GAAI,GAER,CACIJ,KAAM,MACNC,QAAS,WACTC,KAAM,KACNC,KAAM,KACNC,GAAI,GAER,CACIJ,KAAM,WACNC,QAAS,QACTC,KAAM,KACNC,KAAM,KACNC,GAAI,IAER,CACIJ,KAAM,OACNC,QAAS,UACTC,KAAM,KACNC,KAAM,KACNC,GAAI,IAER,CACIJ,KAAM,QACNC,QAAS,cACRC,KAAK,KACNC,KAAM,KACNC,GAAI,KAmB+CC,EAAeC,SAASC,cAAc,qBAE5CR,EAAWS,SAASC,GAAcJ,EAAaK,WAAa,8CAO1CD,EAASL,uCAEnBK,EAAST,QAAWS,EAAQR,mDAM9BQ,EAAkBP,QAAAO,EAAqBN,gC,QAWrCG,SAAaC,cAAc,kBA3CxE,CACZ,8CAEuC,kCACX,kDAEoB,4CACZ,wCACjB,sDACyB,0DACC,uEACc,kEAuCTC,SAAA,CAAAC,EAAAE,IAAAC,EAAAF,WAAA,sFAGkDC,MAAAF,4B,QAGjCI,I,EACFH,UAAA,G,MACJI,QAAAD,KAAeL,SAAAO,GAAUV,EAAqCK,WAAa,sDACrEK,8CACFhB,EAAAiB,MAAAP,KAAAL,KAAAW,IAAAf,QAAAD,EAAAiB,MAAAP,KAAAL,KAAAW,IAAAd,2DACJF,EAAeiB,MAAWP,GAAiBA,EAAQL,KAASW,IAASb,QAAOH,EAAgCiB,MAAAP,KAAAL,KAAAW,IAAAZ,gD,EAG5GO,WAAe,sDACTG,8CACFA,EAAAb,QAAAa,EAAAZ,2DACJY,EAAeX,QAAAW,EAAgBV,6CAEnC,E,EAEUc,iBAAA,SAAAC,I,OACVA,EAAKC,OAAGC,aAAA,mB,IACJ,IACAC,EAAMtB,EAAAuB,QAAAb,KAAAP,KAAA,MAAAO,EAAAP,MAAA,OAAAqB,KAAAd,KAAAL,MACV,M,IACI,I,EAA4BL,EAA4ByB,MAAS,CAACC,EAAAC,IAAOD,EAAAzB,KAAA2B,cAAgBD,EAAA1B,QAAAuB,KAAAd,KAAAL,M,UAA4E,IACrKiB,EAAMtB,EAAAyB,MAAA,CAAAC,EAAAC,MAAAvB,KAAAuB,EAAAxB,MAAAuB,EAAAtB,KAAAsB,EAAAvB,QAAAqB,KAAAd,KAAAL,MACV,M,IACI,IACAiB,EAAMtB,EAAAyB,MAAA,CAAAC,EAAAC,MAAAxB,KAAAuB,EAAAvB,OAAA,IACb,MACvD,Q","sources":["src/js/pick-the-scientist.js"],"sourcesContent":["const scientists = [ \r\n    { \r\n        name: \"Albert\", \r\n        surname: \"Einstein\", \r\n        born: 1879, \r\n        dead: 1955, \r\n        id: 1 \r\n    }, \r\n    { \r\n        name: \"Isaac\", \r\n        surname: \"Newton\", \r\n        born: 1643, \r\n        dead: 1727, \r\n        id: 2 \r\n    }, \r\n    { \r\n        name: \"Galileo\", \r\n        surname: \"Galilei\", \r\n        born: 1564, \r\n        dead: 1642, \r\n        id: 3 \r\n    }, \r\n    { \r\n        name: \"Marie\", \r\n        surname: \"Curie\", \r\n        born: 1867, \r\n        dead: 1934, \r\n        id: 4 \r\n    }, \r\n    { \r\n        name: \"Johannes\", \r\n        surname: \"Kepler\", \r\n        born: 1571, \r\n        dead: 1630, \r\n        id: 5 \r\n    }, \r\n    { \r\n        name: \"Nicolaus\", \r\n        surname: \"Copernicus\", \r\n        born: 1473, \r\n        dead: 1543, \r\n        id: 6 \r\n    }, \r\n    { \r\n        name: \"Max\", \r\n        surname: \"Planck\", \r\n        born: 1858, \r\n        dead: 1947, \r\n        id: 7 \r\n    }, \r\n    { \r\n        name: \"Katherine\", \r\n        surname: \"Blodgett\", \r\n        born: 1898, \r\n        dead: 1979, \r\n        id: 8 \r\n    }, \r\n    { \r\n        name: \"Ada\", \r\n        surname: \"Lovelace\", \r\n        born: 1815, \r\n        dead: 1852, \r\n        id: 9 \r\n    }, \r\n    { \r\n        name: \"Sarah E.\", \r\n        surname: \"Goode\", \r\n        born: 1855, \r\n        dead: 1905, \r\n        id: 10 \r\n    }, \r\n    { \r\n        name: \"Lise\", \r\n        surname: \"Meitner\", \r\n        born: 1878, \r\n        dead: 1968, \r\n        id: 11 \r\n    }, \r\n    { \r\n        name: \"Hanna\", \r\n        surname: \"Hammarström\", \r\n        born: 1829, \r\n        dead: 1909, \r\n        id: 12 \r\n    } \r\n];\r\n\r\nconst prompts = [\r\n    'отримати масив вчених що народилися в 19 ст',\r\n    // 'знайти суму років скільки прожили всі вченнів',\r\n    'Відсортувати вчених по алфавіту',\r\n    'Відсортувати вчених по кількості прожитих років',\r\n    // 'Видалити з масива вчених що народилися в 15 або 16 або 17 столітті',\r\n    'Знайти вченого який народився найпізніше.',\r\n    'Знайти рік народження Albert Einstein',\r\n    'знайти вчених прізвище яких починається на літеру С',\r\n    'Видалити з масива всіх вчених імя яких починається на A',\r\n    'Знайти вченого який прожив найбільше і вченого який прожив найменьше',\r\n    'Знайти вчених в яких співпадають перші літери імені і прізвища',\r\n    // 'Дізнатися чи всі вченні працювали в 19 столітті',\r\n];\r\n\r\nconst scientistsEl = document.querySelector('.info__scientists');\r\n\r\nscientists.forEach((scientist) => scientistsEl.innerHTML += `\r\n    <li class=\"info__scientist\" data-id=\"${scientist.id}\">\r\n        <p class=\"info__name\">${scientist.name} ${scientist.surname}</p>\r\n        <p class=\"info__lifeYears\">${scientist.born}-${scientist.dead} years</p>\r\n    </li>\r\n`);\r\n\r\nconst promptsEl = document.querySelector('.info__prompts');\r\n\r\nprompts.forEach((scientist, idx) => promptsEl.innerHTML += `\r\n    <li class=\"info__prompt\">\r\n        <button class=\"info__but\" data-promptNum=\"${idx}\">${scientist}</button>\r\n    </li>\r\n`);\r\n\r\nconst showScientists = (scientistsToShow) => {\r\n    scientistsEl.innerHTML = '';\r\n    if (Array.isArray(scientistsToShow)) {\r\n        scientistsToShow.forEach((scientistId) => scientistsEl.innerHTML += `\r\n            <li class=\"info__scientist\" data-id=\"${scientistId}\">\r\n                <p class=\"info__name\">${scientists.find(scientist => scientist.id === scientistId).name} ${scientists.find(scientist => scientist.id === scientistId).surname}</p>\r\n                <p class=\"info__lifeYears\">${scientists.find(scientist => scientist.id === scientistId).born}-${scientists.find(scientist => scientist.id === scientistId).dead} years</p>\r\n            </li>\r\n        `);\r\n    }\r\n    else {\r\n        scientistsEl.innerHTML += `\r\n            <li class=\"info__scientist\" data-id=\"${scientistsToShow}\">\r\n                <p class=\"info__name\">${scientistsToShow.name} ${scientistsToShow.surname}</p>\r\n                <p class=\"info__lifeYears\">${scientistsToShow.born}-${scientistsToShow.dead} years</p>\r\n            </li>\r\n        `;\r\n    }\r\n}\r\n\r\npromptsEl.addEventListener('click', (e) => {\r\n    switch (e.target.getAttribute('data-promptNum')) {\r\n        case '0':\r\n            showScientists(scientists.filter(scientist => scientist.born > 1800 && scientist.born <= 1900).map(scientist => scientist.id));\r\n            break;\r\n        case '1':\r\n            showScientists(scientists.sort((a, b) => a.name.localeCompare(b.name)).map(scientist => scientist.id));\r\n            break;\r\n        case '2':\r\n            showScientists(scientists.sort((a, b) => (b.dead-b.born) - (a.dead-a.born)).map(scientist => scientist.id));\r\n            break;\r\n        case '3':\r\n            showScientists(scientists.sort((a, b) => b.born - a.born)[0]);\r\n            break;\r\n        case '4':\r\n            showScientists(scientists.find((scientist) => scientist.name === 'Albert' && scientist.surname === 'Einstein'));\r\n            break;\r\n        case '5':\r\n            showScientists(scientists.filter(scientist => scientist.surname.startsWith('C')).map(scientist => scientist.id));\r\n            break;\r\n        case '6':\r\n            showScientists(scientists.filter(scientist => !(scientist.name.startsWith('A'))).map(scientist => scientist.id));\r\n            break;\r\n        case '7':\r\n            showScientists([Math.max(...scientists.map(scientist => scientist.dead - scientist.born)), Math.min(...scientists.map(scientist => scientist.dead - scientist.born))].map(lifeYears => scientists.find(scientist => scientist.dead - scientist.born === lifeYears).id));\r\n            break;\r\n        case '8':\r\n            showScientists(scientists.filter(scientist => scientist.name[0] === scientist.surname[0]).map(scientist => scientist.id));\r\n            break;\r\n    }\r\n});"],"names":["$1d2e275ab855081a$var$scientists","name","surname","born","dead","id","$1d2e275ab855081a$var$scientistsEl","document","querySelector","forEach","scientist","innerHTML","idx","$1d2e275ab855081a$var$promptsEl","scientistsToShow","isArray","scientistId","find","addEventListener","e","target","getAttribute","$1d2e275ab855081a$var$showScientists","filter","map","sort","a","b","localeCompare"],"version":3,"file":"index.7797d9ab.js.map"}